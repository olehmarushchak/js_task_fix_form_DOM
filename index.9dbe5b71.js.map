{"mappings":"ACmBA,IAAK,IAhBC,EAAQ,SAAS,oBAAoB,CAAC,QACtC,EAAa,SAAC,CAApB,EACE,IAAM,EAAe,EAAY,KAAK,CAAC,GACnC,EAAa,GAUjB,OARA,MAAM,IAAI,CAAC,GAAc,OAAO,CAAC,SAAC,CAAlC,EACM,IAAO,EAAG,WAAW,IACvB,CAAA,GAAc,GADhB,EAIA,GAAc,CAChB,GAEO,EAAY,KAAK,CAAC,EAAG,GAAG,WAAW,GAAK,CACjD,EAES,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAChC,MAAM,IAAI,CAAC,CAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,UAAU,GAAG,CAAC,SAAC,CAD1D,EAEI,IAAM,EAAe,SAAS,aAAa,CAAC,SAE5C,EAAa,SAAS,CAAC,GAAG,CAAC,eAC3B,EAAa,YAAY,CAAC,MAAO,EAAM,EAAE,EACzC,EAAa,WAAW,CAAG,EAAW,EAAM,IAAI,EAEhD,EAAM,UAAU,CAAC,YAAY,CAAC,EAAc,GAE5C,EAAM,YAAY,CAAC,cAAe,EAAW,EAAM,IAAI,EACzD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// d\nvar forms = document.getElementsByTagName(\"form\");\nvar separation = function(placeholder) {\n    var firstCharCut = placeholder.slice(1);\n    var finalParse = \"\";\n    Array.from(firstCharCut).forEach(function(ch) {\n        if (ch === ch.toUpperCase()) finalParse += \" \";\n        finalParse += ch;\n    });\n    return placeholder.slice(0, 1).toUpperCase() + finalParse;\n};\nfor(var i = 0; i < forms.length; i++)Array.from(forms[i].getElementsByTagName(\"input\")).map(function(input) {\n    var labelElement = document.createElement(\"label\");\n    labelElement.classList.add(\"field-label\");\n    labelElement.setAttribute(\"for\", input.id);\n    labelElement.textContent = separation(input.name);\n    input.parentNode.insertBefore(labelElement, input);\n    input.setAttribute(\"placeholder\", separation(input.name));\n});\n\n//# sourceMappingURL=index.9dbe5b71.js.map\n","'use strict';\n// d\n\nconst forms = document.getElementsByTagName('form');\nconst separation = (placeholder) => {\n  const firstCharCut = placeholder.slice(1);\n  let finalParse = '';\n\n  Array.from(firstCharCut).forEach((ch) => {\n    if (ch === ch.toUpperCase()) {\n      finalParse += ' ';\n    }\n\n    finalParse += ch;\n  });\n\n  return placeholder.slice(0, 1).toUpperCase() + finalParse;\n};\n\nfor (let i = 0; i < forms.length; i++) {\n  Array.from(forms[i].getElementsByTagName('input')).map((input) => {\n    const labelElement = document.createElement('label');\n\n    labelElement.classList.add('field-label');\n    labelElement.setAttribute('for', input.id);\n    labelElement.textContent = separation(input.name);\n\n    input.parentNode.insertBefore(labelElement, input);\n\n    input.setAttribute('placeholder', separation(input.name));\n  });\n}\n"],"names":["forms","document","getElementsByTagName","separation","placeholder","firstCharCut","slice","finalParse","Array","from","forEach","ch","toUpperCase","i","length","map","input","labelElement","createElement","classList","add","setAttribute","id","textContent","name","parentNode","insertBefore"],"version":3,"file":"index.9dbe5b71.js.map"}